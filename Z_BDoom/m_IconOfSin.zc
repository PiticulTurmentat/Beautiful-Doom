Class BD_BossBrain : BossBrain {
	bool braindead;
	override void Tick() {
		super.Tick();
		if (isFrozen() || !braindead)
			return;
		let spurt  = BD_Blood(Spawn("BD_Blood",(pos.x,pos.y-240,pos.z+108)));
		if (spurt) {
			spurt.scale = (1,1);
			spurt.target = self;
			spurt.vel.y = frandom(-25,-28);		
		}
		if (random(1,10) >= 8) {
			let spurt  = BD_BasicMeatPiece(Spawn("BD_BasicMeatPiece_Heavy",(pos.x,pos.y-240,pos.z+108)));
			if (spurt) {
				spurt.scale = (1,1);
				spurt.target = self;
				spurt.vel.y = frandom(-18,-22);		
				spurt.vel.x = frandom(-5,5);
			}
		}
	}

	states {
		Pain:
			BBRN B 36 BD_BrainPain();
			goto spawn;
		Death:
			TNT1 A 0 {
				A_StartSound("brain/death", CHAN_VOICE,flags:CHANF_DEFAULT, attenuation:ATTN_NONE);
				If(bdoom_shakes)
					A_Quake(4,100,0,3200,"");
				braindead = true;
			}
			BBRN AAAAAAAAAAAA 10 BD_BrainScream();
			BBRN A -1 A_BrainDie;
			Stop;
	}
	
	void BD_BrainPain() {
		A_StartSound("brain/pain",slot:CHAN_VOICE,flags:CHANF_DEFAULT, attenuation: ATTN_NONE);
		If(bdoom_shakes)
			A_Quake(4,10,0,3200,"");
	}

	void BD_BrainScream() {
		for (int i = 20; i > 0; i--) {
			let boom = Actor.Spawn("BD_CyberExplosion", (pos.x+random(-320,320),pos.y-320,pos.z+random(-144,208)));
			if (boom) boom.target = self;
		}
	}
}


Class BD_SpawnFire : BD_ArchPentagram {
	override void PostBeginPlay() {
		super.PostBeginPlay();
		A_StartSound("bossbrain/spawn");
	}
}

Class BD_SpawnShot : SpawnShot {
	override void PostBeginPlay() {
		super.PostBeginPlay();
		A_StartSound("bossbrain/cubeloop",flags:CHANF_DEFAULT|CHANF_LOOPING,attenuation:2);
		if (bdoom_debris) {
			let f = BD_ProjFlare(Spawn("BD_ProjFlare",pos));
			f.master = self;
			f.alpha = 0.25;
			f.scale = (0.7,0.8);		
			f.fcolor = "red";
		}
	}
	override void Tick() {
		super.Tick();
		if (!isFrozen())
			A_SpawnItemEx("BD_ParticleFire_Red",frandom(-12,-16),frandom(-4,4),frandom(-4,4),failchance:64);
	}
	States 	{
		Spawn: 
			SCUB ABCDEF 2 bright A_SpawnFly("BD_SpawnFire");
			Loop;
	}
}
